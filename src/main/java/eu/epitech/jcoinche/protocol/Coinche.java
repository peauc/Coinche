// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/java/eu/epitech/jcoinche/protocol/communication.proto

package eu.epitech.jcoinche.protocol;

public final class Coinche {
  private Coinche() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.protocol.Message.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.protocol.Message.Type type = 1;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Message.Type getType();

    /**
     * <code>.protocol.Hand hand = 2;</code>
     */
    boolean hasHand();
    /**
     * <code>.protocol.Hand hand = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Hand getHand();
    /**
     * <code>.protocol.Hand hand = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder getHandOrBuilder();

    /**
     * <code>.protocol.Event event = 3;</code>
     */
    boolean hasEvent();
    /**
     * <code>.protocol.Event event = 3;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Event getEvent();
    /**
     * <code>.protocol.Event event = 3;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder getEventOrBuilder();

    /**
     * <code>.protocol.Prompt prompt = 4;</code>
     */
    boolean hasPrompt();
    /**
     * <code>.protocol.Prompt prompt = 4;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Prompt getPrompt();
    /**
     * <code>.protocol.Prompt prompt = 4;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder getPromptOrBuilder();

    /**
     * <code>.protocol.Reply reply = 5;</code>
     */
    boolean hasReply();
    /**
     * <code>.protocol.Reply reply = 5;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Reply getReply();
    /**
     * <code>.protocol.Reply reply = 5;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder getReplyOrBuilder();
  }
  /**
   * Protobuf type {@code protocol.Message}
   */
  public  static final class Message extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Message)
      MessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              eu.epitech.jcoinche.protocol.Coinche.Hand.Builder subBuilder = null;
              if (hand_ != null) {
                subBuilder = hand_.toBuilder();
              }
              hand_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Hand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hand_);
                hand_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              eu.epitech.jcoinche.protocol.Coinche.Event.Builder subBuilder = null;
              if (event_ != null) {
                subBuilder = event_.toBuilder();
              }
              event_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Event.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(event_);
                event_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder subBuilder = null;
              if (prompt_ != null) {
                subBuilder = prompt_.toBuilder();
              }
              prompt_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Prompt.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(prompt_);
                prompt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              eu.epitech.jcoinche.protocol.Coinche.Reply.Builder subBuilder = null;
              if (reply_ != null) {
                subBuilder = reply_.toBuilder();
              }
              reply_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Reply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reply_);
                reply_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Message.class, eu.epitech.jcoinche.protocol.Coinche.Message.Builder.class);
    }

    /**
     * Protobuf enum {@code protocol.Message.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>HAND = 1;</code>
       */
      HAND(1),
      /**
       * <code>EVENT = 2;</code>
       */
      EVENT(2),
      /**
       * <code>PROMPT = 3;</code>
       */
      PROMPT(3),
      /**
       * <code>REPLY = 4;</code>
       */
      REPLY(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>HAND = 1;</code>
       */
      public static final int HAND_VALUE = 1;
      /**
       * <code>EVENT = 2;</code>
       */
      public static final int EVENT_VALUE = 2;
      /**
       * <code>PROMPT = 3;</code>
       */
      public static final int PROMPT_VALUE = 3;
      /**
       * <code>REPLY = 4;</code>
       */
      public static final int REPLY_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return HAND;
          case 2: return EVENT;
          case 3: return PROMPT;
          case 4: return REPLY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.Message.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Message.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.protocol.Message.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protocol.Message.Type type = 1;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Message.Type getType() {
      eu.epitech.jcoinche.protocol.Coinche.Message.Type result = eu.epitech.jcoinche.protocol.Coinche.Message.Type.valueOf(type_);
      return result == null ? eu.epitech.jcoinche.protocol.Coinche.Message.Type.UNRECOGNIZED : result;
    }

    public static final int HAND_FIELD_NUMBER = 2;
    private eu.epitech.jcoinche.protocol.Coinche.Hand hand_;
    /**
     * <code>.protocol.Hand hand = 2;</code>
     */
    public boolean hasHand() {
      return hand_ != null;
    }
    /**
     * <code>.protocol.Hand hand = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Hand getHand() {
      return hand_ == null ? eu.epitech.jcoinche.protocol.Coinche.Hand.getDefaultInstance() : hand_;
    }
    /**
     * <code>.protocol.Hand hand = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder getHandOrBuilder() {
      return getHand();
    }

    public static final int EVENT_FIELD_NUMBER = 3;
    private eu.epitech.jcoinche.protocol.Coinche.Event event_;
    /**
     * <code>.protocol.Event event = 3;</code>
     */
    public boolean hasEvent() {
      return event_ != null;
    }
    /**
     * <code>.protocol.Event event = 3;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Event getEvent() {
      return event_ == null ? eu.epitech.jcoinche.protocol.Coinche.Event.getDefaultInstance() : event_;
    }
    /**
     * <code>.protocol.Event event = 3;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder getEventOrBuilder() {
      return getEvent();
    }

    public static final int PROMPT_FIELD_NUMBER = 4;
    private eu.epitech.jcoinche.protocol.Coinche.Prompt prompt_;
    /**
     * <code>.protocol.Prompt prompt = 4;</code>
     */
    public boolean hasPrompt() {
      return prompt_ != null;
    }
    /**
     * <code>.protocol.Prompt prompt = 4;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Prompt getPrompt() {
      return prompt_ == null ? eu.epitech.jcoinche.protocol.Coinche.Prompt.getDefaultInstance() : prompt_;
    }
    /**
     * <code>.protocol.Prompt prompt = 4;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder getPromptOrBuilder() {
      return getPrompt();
    }

    public static final int REPLY_FIELD_NUMBER = 5;
    private eu.epitech.jcoinche.protocol.Coinche.Reply reply_;
    /**
     * <code>.protocol.Reply reply = 5;</code>
     */
    public boolean hasReply() {
      return reply_ != null;
    }
    /**
     * <code>.protocol.Reply reply = 5;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Reply getReply() {
      return reply_ == null ? eu.epitech.jcoinche.protocol.Coinche.Reply.getDefaultInstance() : reply_;
    }
    /**
     * <code>.protocol.Reply reply = 5;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder getReplyOrBuilder() {
      return getReply();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Message.Type.UNDEFINED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (hand_ != null) {
        output.writeMessage(2, getHand());
      }
      if (event_ != null) {
        output.writeMessage(3, getEvent());
      }
      if (prompt_ != null) {
        output.writeMessage(4, getPrompt());
      }
      if (reply_ != null) {
        output.writeMessage(5, getReply());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Message.Type.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (hand_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHand());
      }
      if (event_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEvent());
      }
      if (prompt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPrompt());
      }
      if (reply_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getReply());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Message)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Message other = (eu.epitech.jcoinche.protocol.Coinche.Message) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasHand() == other.hasHand());
      if (hasHand()) {
        result = result && getHand()
            .equals(other.getHand());
      }
      result = result && (hasEvent() == other.hasEvent());
      if (hasEvent()) {
        result = result && getEvent()
            .equals(other.getEvent());
      }
      result = result && (hasPrompt() == other.hasPrompt());
      if (hasPrompt()) {
        result = result && getPrompt()
            .equals(other.getPrompt());
      }
      result = result && (hasReply() == other.hasReply());
      if (hasReply()) {
        result = result && getReply()
            .equals(other.getReply());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasHand()) {
        hash = (37 * hash) + HAND_FIELD_NUMBER;
        hash = (53 * hash) + getHand().hashCode();
      }
      if (hasEvent()) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEvent().hashCode();
      }
      if (hasPrompt()) {
        hash = (37 * hash) + PROMPT_FIELD_NUMBER;
        hash = (53 * hash) + getPrompt().hashCode();
      }
      if (hasReply()) {
        hash = (37 * hash) + REPLY_FIELD_NUMBER;
        hash = (53 * hash) + getReply().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Message)
        eu.epitech.jcoinche.protocol.Coinche.MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Message.class, eu.epitech.jcoinche.protocol.Coinche.Message.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (handBuilder_ == null) {
          hand_ = null;
        } else {
          hand_ = null;
          handBuilder_ = null;
        }
        if (eventBuilder_ == null) {
          event_ = null;
        } else {
          event_ = null;
          eventBuilder_ = null;
        }
        if (promptBuilder_ == null) {
          prompt_ = null;
        } else {
          prompt_ = null;
          promptBuilder_ = null;
        }
        if (replyBuilder_ == null) {
          reply_ = null;
        } else {
          reply_ = null;
          replyBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Message_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Message getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Message.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Message build() {
        eu.epitech.jcoinche.protocol.Coinche.Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Message buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Message result = new eu.epitech.jcoinche.protocol.Coinche.Message(this);
        result.type_ = type_;
        if (handBuilder_ == null) {
          result.hand_ = hand_;
        } else {
          result.hand_ = handBuilder_.build();
        }
        if (eventBuilder_ == null) {
          result.event_ = event_;
        } else {
          result.event_ = eventBuilder_.build();
        }
        if (promptBuilder_ == null) {
          result.prompt_ = prompt_;
        } else {
          result.prompt_ = promptBuilder_.build();
        }
        if (replyBuilder_ == null) {
          result.reply_ = reply_;
        } else {
          result.reply_ = replyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Message) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Message other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Message.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasHand()) {
          mergeHand(other.getHand());
        }
        if (other.hasEvent()) {
          mergeEvent(other.getEvent());
        }
        if (other.hasPrompt()) {
          mergePrompt(other.getPrompt());
        }
        if (other.hasReply()) {
          mergeReply(other.getReply());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Message) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.protocol.Message.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protocol.Message.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Message.Type type = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Message.Type getType() {
        eu.epitech.jcoinche.protocol.Coinche.Message.Type result = eu.epitech.jcoinche.protocol.Coinche.Message.Type.valueOf(type_);
        return result == null ? eu.epitech.jcoinche.protocol.Coinche.Message.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.Message.Type type = 1;</code>
       */
      public Builder setType(eu.epitech.jcoinche.protocol.Coinche.Message.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Message.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Hand hand_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Hand, eu.epitech.jcoinche.protocol.Coinche.Hand.Builder, eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder> handBuilder_;
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public boolean hasHand() {
        return handBuilder_ != null || hand_ != null;
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Hand getHand() {
        if (handBuilder_ == null) {
          return hand_ == null ? eu.epitech.jcoinche.protocol.Coinche.Hand.getDefaultInstance() : hand_;
        } else {
          return handBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public Builder setHand(eu.epitech.jcoinche.protocol.Coinche.Hand value) {
        if (handBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hand_ = value;
          onChanged();
        } else {
          handBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public Builder setHand(
          eu.epitech.jcoinche.protocol.Coinche.Hand.Builder builderForValue) {
        if (handBuilder_ == null) {
          hand_ = builderForValue.build();
          onChanged();
        } else {
          handBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public Builder mergeHand(eu.epitech.jcoinche.protocol.Coinche.Hand value) {
        if (handBuilder_ == null) {
          if (hand_ != null) {
            hand_ =
              eu.epitech.jcoinche.protocol.Coinche.Hand.newBuilder(hand_).mergeFrom(value).buildPartial();
          } else {
            hand_ = value;
          }
          onChanged();
        } else {
          handBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public Builder clearHand() {
        if (handBuilder_ == null) {
          hand_ = null;
          onChanged();
        } else {
          hand_ = null;
          handBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Hand.Builder getHandBuilder() {
        
        onChanged();
        return getHandFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder getHandOrBuilder() {
        if (handBuilder_ != null) {
          return handBuilder_.getMessageOrBuilder();
        } else {
          return hand_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Hand.getDefaultInstance() : hand_;
        }
      }
      /**
       * <code>.protocol.Hand hand = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Hand, eu.epitech.jcoinche.protocol.Coinche.Hand.Builder, eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder> 
          getHandFieldBuilder() {
        if (handBuilder_ == null) {
          handBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Hand, eu.epitech.jcoinche.protocol.Coinche.Hand.Builder, eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder>(
                  getHand(),
                  getParentForChildren(),
                  isClean());
          hand_ = null;
        }
        return handBuilder_;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Event event_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Event, eu.epitech.jcoinche.protocol.Coinche.Event.Builder, eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder> eventBuilder_;
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public boolean hasEvent() {
        return eventBuilder_ != null || event_ != null;
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Event getEvent() {
        if (eventBuilder_ == null) {
          return event_ == null ? eu.epitech.jcoinche.protocol.Coinche.Event.getDefaultInstance() : event_;
        } else {
          return eventBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public Builder setEvent(eu.epitech.jcoinche.protocol.Coinche.Event value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          eventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public Builder setEvent(
          eu.epitech.jcoinche.protocol.Coinche.Event.Builder builderForValue) {
        if (eventBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          eventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public Builder mergeEvent(eu.epitech.jcoinche.protocol.Coinche.Event value) {
        if (eventBuilder_ == null) {
          if (event_ != null) {
            event_ =
              eu.epitech.jcoinche.protocol.Coinche.Event.newBuilder(event_).mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          eventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public Builder clearEvent() {
        if (eventBuilder_ == null) {
          event_ = null;
          onChanged();
        } else {
          event_ = null;
          eventBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Event.Builder getEventBuilder() {
        
        onChanged();
        return getEventFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder getEventOrBuilder() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilder();
        } else {
          return event_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Event.getDefaultInstance() : event_;
        }
      }
      /**
       * <code>.protocol.Event event = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Event, eu.epitech.jcoinche.protocol.Coinche.Event.Builder, eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Event, eu.epitech.jcoinche.protocol.Coinche.Event.Builder, eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder>(
                  getEvent(),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Prompt prompt_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Prompt, eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder, eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder> promptBuilder_;
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public boolean hasPrompt() {
        return promptBuilder_ != null || prompt_ != null;
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Prompt getPrompt() {
        if (promptBuilder_ == null) {
          return prompt_ == null ? eu.epitech.jcoinche.protocol.Coinche.Prompt.getDefaultInstance() : prompt_;
        } else {
          return promptBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public Builder setPrompt(eu.epitech.jcoinche.protocol.Coinche.Prompt value) {
        if (promptBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          prompt_ = value;
          onChanged();
        } else {
          promptBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public Builder setPrompt(
          eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder builderForValue) {
        if (promptBuilder_ == null) {
          prompt_ = builderForValue.build();
          onChanged();
        } else {
          promptBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public Builder mergePrompt(eu.epitech.jcoinche.protocol.Coinche.Prompt value) {
        if (promptBuilder_ == null) {
          if (prompt_ != null) {
            prompt_ =
              eu.epitech.jcoinche.protocol.Coinche.Prompt.newBuilder(prompt_).mergeFrom(value).buildPartial();
          } else {
            prompt_ = value;
          }
          onChanged();
        } else {
          promptBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public Builder clearPrompt() {
        if (promptBuilder_ == null) {
          prompt_ = null;
          onChanged();
        } else {
          prompt_ = null;
          promptBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder getPromptBuilder() {
        
        onChanged();
        return getPromptFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder getPromptOrBuilder() {
        if (promptBuilder_ != null) {
          return promptBuilder_.getMessageOrBuilder();
        } else {
          return prompt_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Prompt.getDefaultInstance() : prompt_;
        }
      }
      /**
       * <code>.protocol.Prompt prompt = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Prompt, eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder, eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder> 
          getPromptFieldBuilder() {
        if (promptBuilder_ == null) {
          promptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Prompt, eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder, eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder>(
                  getPrompt(),
                  getParentForChildren(),
                  isClean());
          prompt_ = null;
        }
        return promptBuilder_;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Reply reply_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Reply, eu.epitech.jcoinche.protocol.Coinche.Reply.Builder, eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder> replyBuilder_;
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public boolean hasReply() {
        return replyBuilder_ != null || reply_ != null;
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Reply getReply() {
        if (replyBuilder_ == null) {
          return reply_ == null ? eu.epitech.jcoinche.protocol.Coinche.Reply.getDefaultInstance() : reply_;
        } else {
          return replyBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public Builder setReply(eu.epitech.jcoinche.protocol.Coinche.Reply value) {
        if (replyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reply_ = value;
          onChanged();
        } else {
          replyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public Builder setReply(
          eu.epitech.jcoinche.protocol.Coinche.Reply.Builder builderForValue) {
        if (replyBuilder_ == null) {
          reply_ = builderForValue.build();
          onChanged();
        } else {
          replyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public Builder mergeReply(eu.epitech.jcoinche.protocol.Coinche.Reply value) {
        if (replyBuilder_ == null) {
          if (reply_ != null) {
            reply_ =
              eu.epitech.jcoinche.protocol.Coinche.Reply.newBuilder(reply_).mergeFrom(value).buildPartial();
          } else {
            reply_ = value;
          }
          onChanged();
        } else {
          replyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public Builder clearReply() {
        if (replyBuilder_ == null) {
          reply_ = null;
          onChanged();
        } else {
          reply_ = null;
          replyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Reply.Builder getReplyBuilder() {
        
        onChanged();
        return getReplyFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder getReplyOrBuilder() {
        if (replyBuilder_ != null) {
          return replyBuilder_.getMessageOrBuilder();
        } else {
          return reply_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Reply.getDefaultInstance() : reply_;
        }
      }
      /**
       * <code>.protocol.Reply reply = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Reply, eu.epitech.jcoinche.protocol.Coinche.Reply.Builder, eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder> 
          getReplyFieldBuilder() {
        if (replyBuilder_ == null) {
          replyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Reply, eu.epitech.jcoinche.protocol.Coinche.Reply.Builder, eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder>(
                  getReply(),
                  getParentForChildren(),
                  isClean());
          reply_ = null;
        }
        return replyBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Message)
    }

    // @@protoc_insertion_point(class_scope:protocol.Message)
    private static final eu.epitech.jcoinche.protocol.Coinche.Message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Message();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message>
        PARSER = new com.google.protobuf.AbstractParser<Message>() {
      public Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Message(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Message> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Card)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.protocol.Card.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.protocol.Card.Type type = 1;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Card.Type getType();

    /**
     * <code>.protocol.Card.Value value = 2;</code>
     */
    int getValueValue();
    /**
     * <code>.protocol.Card.Value value = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Card.Value getValue();
  }
  /**
   * Protobuf type {@code protocol.Card}
   */
  public  static final class Card extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Card)
      CardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Card.newBuilder() to construct.
    private Card(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Card() {
      type_ = 0;
      value_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Card(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              value_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Card_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Card.class, eu.epitech.jcoinche.protocol.Coinche.Card.Builder.class);
    }

    /**
     * Protobuf enum {@code protocol.Card.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINEDT = 0;</code>
       */
      UNDEFINEDT(0),
      /**
       * <code>DIAMONDS = 1;</code>
       */
      DIAMONDS(1),
      /**
       * <code>HEARTS = 2;</code>
       */
      HEARTS(2),
      /**
       * <code>CLUBS = 3;</code>
       */
      CLUBS(3),
      /**
       * <code>SPADES = 4;</code>
       */
      SPADES(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINEDT = 0;</code>
       */
      public static final int UNDEFINEDT_VALUE = 0;
      /**
       * <code>DIAMONDS = 1;</code>
       */
      public static final int DIAMONDS_VALUE = 1;
      /**
       * <code>HEARTS = 2;</code>
       */
      public static final int HEARTS_VALUE = 2;
      /**
       * <code>CLUBS = 3;</code>
       */
      public static final int CLUBS_VALUE = 3;
      /**
       * <code>SPADES = 4;</code>
       */
      public static final int SPADES_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINEDT;
          case 1: return DIAMONDS;
          case 2: return HEARTS;
          case 3: return CLUBS;
          case 4: return SPADES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.Card.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Card.Type)
    }

    /**
     * Protobuf enum {@code protocol.Card.Value}
     */
    public enum Value
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINEDV = 0;</code>
       */
      UNDEFINEDV(0),
      /**
       * <code>ACE = 1;</code>
       */
      ACE(1),
      /**
       * <code>KING = 2;</code>
       */
      KING(2),
      /**
       * <code>QUEEN = 3;</code>
       */
      QUEEN(3),
      /**
       * <code>JACK = 4;</code>
       */
      JACK(4),
      /**
       * <code>TEN = 5;</code>
       */
      TEN(5),
      /**
       * <code>NINE = 6;</code>
       */
      NINE(6),
      /**
       * <code>EIGHT = 7;</code>
       */
      EIGHT(7),
      /**
       * <code>SEVEN = 8;</code>
       */
      SEVEN(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINEDV = 0;</code>
       */
      public static final int UNDEFINEDV_VALUE = 0;
      /**
       * <code>ACE = 1;</code>
       */
      public static final int ACE_VALUE = 1;
      /**
       * <code>KING = 2;</code>
       */
      public static final int KING_VALUE = 2;
      /**
       * <code>QUEEN = 3;</code>
       */
      public static final int QUEEN_VALUE = 3;
      /**
       * <code>JACK = 4;</code>
       */
      public static final int JACK_VALUE = 4;
      /**
       * <code>TEN = 5;</code>
       */
      public static final int TEN_VALUE = 5;
      /**
       * <code>NINE = 6;</code>
       */
      public static final int NINE_VALUE = 6;
      /**
       * <code>EIGHT = 7;</code>
       */
      public static final int EIGHT_VALUE = 7;
      /**
       * <code>SEVEN = 8;</code>
       */
      public static final int SEVEN_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Value valueOf(int value) {
        return forNumber(value);
      }

      public static Value forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINEDV;
          case 1: return ACE;
          case 2: return KING;
          case 3: return QUEEN;
          case 4: return JACK;
          case 5: return TEN;
          case 6: return NINE;
          case 7: return EIGHT;
          case 8: return SEVEN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Value>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Value> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Value>() {
              public Value findValueByNumber(int number) {
                return Value.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.Card.getDescriptor().getEnumTypes().get(1);
      }

      private static final Value[] VALUES = values();

      public static Value valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Value(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Card.Value)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.protocol.Card.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protocol.Card.Type type = 1;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Card.Type getType() {
      eu.epitech.jcoinche.protocol.Coinche.Card.Type result = eu.epitech.jcoinche.protocol.Coinche.Card.Type.valueOf(type_);
      return result == null ? eu.epitech.jcoinche.protocol.Coinche.Card.Type.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>.protocol.Card.Value value = 2;</code>
     */
    public int getValueValue() {
      return value_;
    }
    /**
     * <code>.protocol.Card.Value value = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Card.Value getValue() {
      eu.epitech.jcoinche.protocol.Coinche.Card.Value result = eu.epitech.jcoinche.protocol.Coinche.Card.Value.valueOf(value_);
      return result == null ? eu.epitech.jcoinche.protocol.Coinche.Card.Value.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Card.Type.UNDEFINEDT.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (value_ != eu.epitech.jcoinche.protocol.Coinche.Card.Value.UNDEFINEDV.getNumber()) {
        output.writeEnum(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Card.Type.UNDEFINEDT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (value_ != eu.epitech.jcoinche.protocol.Coinche.Card.Value.UNDEFINEDV.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Card)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Card other = (eu.epitech.jcoinche.protocol.Coinche.Card) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && value_ == other.value_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + value_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Card prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Card)
        eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Card_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Card.class, eu.epitech.jcoinche.protocol.Coinche.Card.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        value_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Card_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Card getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Card build() {
        eu.epitech.jcoinche.protocol.Coinche.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Card buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Card result = new eu.epitech.jcoinche.protocol.Coinche.Card(this);
        result.type_ = type_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Card) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Card other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.value_ != 0) {
          setValueValue(other.getValueValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Card parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Card) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.protocol.Card.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protocol.Card.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Card.Type type = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Type getType() {
        eu.epitech.jcoinche.protocol.Coinche.Card.Type result = eu.epitech.jcoinche.protocol.Coinche.Card.Type.valueOf(type_);
        return result == null ? eu.epitech.jcoinche.protocol.Coinche.Card.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.Card.Type type = 1;</code>
       */
      public Builder setType(eu.epitech.jcoinche.protocol.Coinche.Card.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Card.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int value_ = 0;
      /**
       * <code>.protocol.Card.Value value = 2;</code>
       */
      public int getValueValue() {
        return value_;
      }
      /**
       * <code>.protocol.Card.Value value = 2;</code>
       */
      public Builder setValueValue(int value) {
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Card.Value value = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Value getValue() {
        eu.epitech.jcoinche.protocol.Coinche.Card.Value result = eu.epitech.jcoinche.protocol.Coinche.Card.Value.valueOf(value_);
        return result == null ? eu.epitech.jcoinche.protocol.Coinche.Card.Value.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.Card.Value value = 2;</code>
       */
      public Builder setValue(eu.epitech.jcoinche.protocol.Coinche.Card.Value value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        value_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Card.Value value = 2;</code>
       */
      public Builder clearValue() {
        
        value_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Card)
    }

    // @@protoc_insertion_point(class_scope:protocol.Card)
    private static final eu.epitech.jcoinche.protocol.Coinche.Card DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Card();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Card getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Card>
        PARSER = new com.google.protobuf.AbstractParser<Card>() {
      public Card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Card(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Card> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Card> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Card getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnnounceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Announce)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.protocol.Announce.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.protocol.Announce.Type type = 1;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Announce.Type getType();

    /**
     * <code>.protocol.Card card = 2;</code>
     */
    boolean hasCard();
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Card getCard();
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder();
  }
  /**
   * Protobuf type {@code protocol.Announce}
   */
  public  static final class Announce extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Announce)
      AnnounceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Announce.newBuilder() to construct.
    private Announce(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Announce() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Announce(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              eu.epitech.jcoinche.protocol.Coinche.Card.Builder subBuilder = null;
              if (card_ != null) {
                subBuilder = card_.toBuilder();
              }
              card_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Card.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(card_);
                card_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Announce_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Announce_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Announce.class, eu.epitech.jcoinche.protocol.Coinche.Announce.Builder.class);
    }

    /**
     * Protobuf enum {@code protocol.Announce.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>CARRE = 1;</code>
       */
      CARRE(1),
      /**
       * <code>CENT = 2;</code>
       */
      CENT(2),
      /**
       * <code>CINQUANTE = 3;</code>
       */
      CINQUANTE(3),
      /**
       * <code>TIERCE = 4;</code>
       */
      TIERCE(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>CARRE = 1;</code>
       */
      public static final int CARRE_VALUE = 1;
      /**
       * <code>CENT = 2;</code>
       */
      public static final int CENT_VALUE = 2;
      /**
       * <code>CINQUANTE = 3;</code>
       */
      public static final int CINQUANTE_VALUE = 3;
      /**
       * <code>TIERCE = 4;</code>
       */
      public static final int TIERCE_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return CARRE;
          case 2: return CENT;
          case 3: return CINQUANTE;
          case 4: return TIERCE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.Announce.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Announce.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.protocol.Announce.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protocol.Announce.Type type = 1;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Announce.Type getType() {
      eu.epitech.jcoinche.protocol.Coinche.Announce.Type result = eu.epitech.jcoinche.protocol.Coinche.Announce.Type.valueOf(type_);
      return result == null ? eu.epitech.jcoinche.protocol.Coinche.Announce.Type.UNRECOGNIZED : result;
    }

    public static final int CARD_FIELD_NUMBER = 2;
    private eu.epitech.jcoinche.protocol.Coinche.Card card_;
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    public boolean hasCard() {
      return card_ != null;
    }
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Card getCard() {
      return card_ == null ? eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance() : card_;
    }
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder() {
      return getCard();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Announce.Type.UNDEFINED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (card_ != null) {
        output.writeMessage(2, getCard());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Announce.Type.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (card_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCard());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Announce)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Announce other = (eu.epitech.jcoinche.protocol.Coinche.Announce) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasCard() == other.hasCard());
      if (hasCard()) {
        result = result && getCard()
            .equals(other.getCard());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasCard()) {
        hash = (37 * hash) + CARD_FIELD_NUMBER;
        hash = (53 * hash) + getCard().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Announce parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Announce prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Announce}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Announce)
        eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Announce_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Announce_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Announce.class, eu.epitech.jcoinche.protocol.Coinche.Announce.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Announce.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (cardBuilder_ == null) {
          card_ = null;
        } else {
          card_ = null;
          cardBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Announce_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Announce getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Announce.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Announce build() {
        eu.epitech.jcoinche.protocol.Coinche.Announce result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Announce buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Announce result = new eu.epitech.jcoinche.protocol.Coinche.Announce(this);
        result.type_ = type_;
        if (cardBuilder_ == null) {
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Announce) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Announce)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Announce other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Announce.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasCard()) {
          mergeCard(other.getCard());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Announce parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Announce) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.protocol.Announce.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protocol.Announce.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Announce.Type type = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Announce.Type getType() {
        eu.epitech.jcoinche.protocol.Coinche.Announce.Type result = eu.epitech.jcoinche.protocol.Coinche.Announce.Type.valueOf(type_);
        return result == null ? eu.epitech.jcoinche.protocol.Coinche.Announce.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.Announce.Type type = 1;</code>
       */
      public Builder setType(eu.epitech.jcoinche.protocol.Coinche.Announce.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Announce.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Card card_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> cardBuilder_;
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public boolean hasCard() {
        return cardBuilder_ != null || card_ != null;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card getCard() {
        if (cardBuilder_ == null) {
          return card_ == null ? eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance() : card_;
        } else {
          return cardBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder setCard(eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          card_ = value;
          onChanged();
        } else {
          cardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder setCard(
          eu.epitech.jcoinche.protocol.Coinche.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          card_ = builderForValue.build();
          onChanged();
        } else {
          cardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder mergeCard(eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (card_ != null) {
            card_ =
              eu.epitech.jcoinche.protocol.Coinche.Card.newBuilder(card_).mergeFrom(value).buildPartial();
          } else {
            card_ = value;
          }
          onChanged();
        } else {
          cardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = null;
          onChanged();
        } else {
          card_ = null;
          cardBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Builder getCardBuilder() {
        
        onChanged();
        return getCardFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilder();
        } else {
          return card_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance() : card_;
        }
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder>(
                  getCard(),
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Announce)
    }

    // @@protoc_insertion_point(class_scope:protocol.Announce)
    private static final eu.epitech.jcoinche.protocol.Coinche.Announce DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Announce();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Announce getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Announce>
        PARSER = new com.google.protobuf.AbstractParser<Announce>() {
      public Announce parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Announce(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Announce> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Announce> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Announce getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Hand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    java.util.List<eu.epitech.jcoinche.protocol.Coinche.Card> 
        getCardList();
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Card getCard(int index);
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    int getCardCount();
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    java.util.List<? extends eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> 
        getCardOrBuilderList();
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protocol.Hand}
   */
  public  static final class Hand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Hand)
      HandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Hand.newBuilder() to construct.
    private Hand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Hand() {
      card_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Hand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                card_ = new java.util.ArrayList<eu.epitech.jcoinche.protocol.Coinche.Card>();
                mutable_bitField0_ |= 0x00000001;
              }
              card_.add(
                  input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Card.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          card_ = java.util.Collections.unmodifiableList(card_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Hand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Hand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Hand.class, eu.epitech.jcoinche.protocol.Coinche.Hand.Builder.class);
    }

    public static final int CARD_FIELD_NUMBER = 1;
    private java.util.List<eu.epitech.jcoinche.protocol.Coinche.Card> card_;
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    public java.util.List<eu.epitech.jcoinche.protocol.Coinche.Card> getCardList() {
      return card_;
    }
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    public java.util.List<? extends eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> 
        getCardOrBuilderList() {
      return card_;
    }
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    public int getCardCount() {
      return card_.size();
    }
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Card getCard(int index) {
      return card_.get(index);
    }
    /**
     * <code>repeated .protocol.Card card = 1;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder(
        int index) {
      return card_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < card_.size(); i++) {
        output.writeMessage(1, card_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < card_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, card_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Hand)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Hand other = (eu.epitech.jcoinche.protocol.Coinche.Hand) obj;

      boolean result = true;
      result = result && getCardList()
          .equals(other.getCardList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardCount() > 0) {
        hash = (37 * hash) + CARD_FIELD_NUMBER;
        hash = (53 * hash) + getCardList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Hand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Hand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Hand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Hand)
        eu.epitech.jcoinche.protocol.Coinche.HandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Hand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Hand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Hand.class, eu.epitech.jcoinche.protocol.Coinche.Hand.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Hand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCardFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (cardBuilder_ == null) {
          card_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cardBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Hand_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Hand getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Hand.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Hand build() {
        eu.epitech.jcoinche.protocol.Coinche.Hand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Hand buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Hand result = new eu.epitech.jcoinche.protocol.Coinche.Hand(this);
        int from_bitField0_ = bitField0_;
        if (cardBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            card_ = java.util.Collections.unmodifiableList(card_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Hand) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Hand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Hand other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Hand.getDefaultInstance()) return this;
        if (cardBuilder_ == null) {
          if (!other.card_.isEmpty()) {
            if (card_.isEmpty()) {
              card_ = other.card_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCardIsMutable();
              card_.addAll(other.card_);
            }
            onChanged();
          }
        } else {
          if (!other.card_.isEmpty()) {
            if (cardBuilder_.isEmpty()) {
              cardBuilder_.dispose();
              cardBuilder_ = null;
              card_ = other.card_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCardFieldBuilder() : null;
            } else {
              cardBuilder_.addAllMessages(other.card_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Hand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Hand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<eu.epitech.jcoinche.protocol.Coinche.Card> card_ =
        java.util.Collections.emptyList();
      private void ensureCardIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          card_ = new java.util.ArrayList<eu.epitech.jcoinche.protocol.Coinche.Card>(card_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> cardBuilder_;

      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public java.util.List<eu.epitech.jcoinche.protocol.Coinche.Card> getCardList() {
        if (cardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(card_);
        } else {
          return cardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public int getCardCount() {
        if (cardBuilder_ == null) {
          return card_.size();
        } else {
          return cardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card getCard(int index) {
        if (cardBuilder_ == null) {
          return card_.get(index);
        } else {
          return cardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder setCard(
          int index, eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.set(index, value);
          onChanged();
        } else {
          cardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder setCard(
          int index, eu.epitech.jcoinche.protocol.Coinche.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder addCard(eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.add(value);
          onChanged();
        } else {
          cardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder addCard(
          int index, eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.add(index, value);
          onChanged();
        } else {
          cardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder addCard(
          eu.epitech.jcoinche.protocol.Coinche.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.add(builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder addCard(
          int index, eu.epitech.jcoinche.protocol.Coinche.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder addAllCard(
          java.lang.Iterable<? extends eu.epitech.jcoinche.protocol.Coinche.Card> values) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, card_);
          onChanged();
        } else {
          cardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public Builder removeCard(int index) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.remove(index);
          onChanged();
        } else {
          cardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Builder getCardBuilder(
          int index) {
        return getCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder(
          int index) {
        if (cardBuilder_ == null) {
          return card_.get(index);  } else {
          return cardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public java.util.List<? extends eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> 
           getCardOrBuilderList() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(card_);
        }
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Builder addCardBuilder() {
        return getCardFieldBuilder().addBuilder(
            eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Builder addCardBuilder(
          int index) {
        return getCardFieldBuilder().addBuilder(
            index, eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.Card card = 1;</code>
       */
      public java.util.List<eu.epitech.jcoinche.protocol.Coinche.Card.Builder> 
           getCardBuilderList() {
        return getCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder>(
                  card_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Hand)
    }

    // @@protoc_insertion_point(class_scope:protocol.Hand)
    private static final eu.epitech.jcoinche.protocol.Coinche.Hand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Hand();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Hand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Hand>
        PARSER = new com.google.protobuf.AbstractParser<Hand>() {
      public Hand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Hand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Hand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Hand> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Hand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContractOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Contract)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 score = 1;</code>
     */
    int getScore();

    /**
     * <code>.protocol.Contract.Type type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>.protocol.Contract.Type type = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Contract.Type getType();
  }
  /**
   * Protobuf type {@code protocol.Contract}
   */
  public  static final class Contract extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Contract)
      ContractOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Contract.newBuilder() to construct.
    private Contract(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Contract() {
      score_ = 0;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Contract(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              score_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Contract_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Contract_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Contract.class, eu.epitech.jcoinche.protocol.Coinche.Contract.Builder.class);
    }

    /**
     * Protobuf enum {@code protocol.Contract.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>DIAMONDS = 1;</code>
       */
      DIAMONDS(1),
      /**
       * <code>HEARTS = 2;</code>
       */
      HEARTS(2),
      /**
       * <code>CLUBS = 3;</code>
       */
      CLUBS(3),
      /**
       * <code>SPADES = 4;</code>
       */
      SPADES(4),
      /**
       * <code>AA = 5;</code>
       */
      AA(5),
      /**
       * <code>NA = 6;</code>
       */
      NA(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>DIAMONDS = 1;</code>
       */
      public static final int DIAMONDS_VALUE = 1;
      /**
       * <code>HEARTS = 2;</code>
       */
      public static final int HEARTS_VALUE = 2;
      /**
       * <code>CLUBS = 3;</code>
       */
      public static final int CLUBS_VALUE = 3;
      /**
       * <code>SPADES = 4;</code>
       */
      public static final int SPADES_VALUE = 4;
      /**
       * <code>AA = 5;</code>
       */
      public static final int AA_VALUE = 5;
      /**
       * <code>NA = 6;</code>
       */
      public static final int NA_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return DIAMONDS;
          case 2: return HEARTS;
          case 3: return CLUBS;
          case 4: return SPADES;
          case 5: return AA;
          case 6: return NA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.Contract.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Contract.Type)
    }

    public static final int SCORE_FIELD_NUMBER = 1;
    private int score_;
    /**
     * <code>uint32 score = 1;</code>
     */
    public int getScore() {
      return score_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>.protocol.Contract.Type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protocol.Contract.Type type = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Contract.Type getType() {
      eu.epitech.jcoinche.protocol.Coinche.Contract.Type result = eu.epitech.jcoinche.protocol.Coinche.Contract.Type.valueOf(type_);
      return result == null ? eu.epitech.jcoinche.protocol.Coinche.Contract.Type.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (score_ != 0) {
        output.writeUInt32(1, score_);
      }
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Contract.Type.UNDEFINED.getNumber()) {
        output.writeEnum(2, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, score_);
      }
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Contract.Type.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Contract)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Contract other = (eu.epitech.jcoinche.protocol.Coinche.Contract) obj;

      boolean result = true;
      result = result && (getScore()
          == other.getScore());
      result = result && type_ == other.type_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Contract parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Contract prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Contract}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Contract)
        eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Contract_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Contract_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Contract.class, eu.epitech.jcoinche.protocol.Coinche.Contract.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Contract.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        score_ = 0;

        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Contract_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Contract getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Contract.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Contract build() {
        eu.epitech.jcoinche.protocol.Coinche.Contract result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Contract buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Contract result = new eu.epitech.jcoinche.protocol.Coinche.Contract(this);
        result.score_ = score_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Contract) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Contract)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Contract other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Contract.getDefaultInstance()) return this;
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Contract parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Contract) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int score_ ;
      /**
       * <code>uint32 score = 1;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>uint32 score = 1;</code>
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 score = 1;</code>
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.protocol.Contract.Type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protocol.Contract.Type type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Contract.Type type = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Contract.Type getType() {
        eu.epitech.jcoinche.protocol.Coinche.Contract.Type result = eu.epitech.jcoinche.protocol.Coinche.Contract.Type.valueOf(type_);
        return result == null ? eu.epitech.jcoinche.protocol.Coinche.Contract.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.Contract.Type type = 2;</code>
       */
      public Builder setType(eu.epitech.jcoinche.protocol.Coinche.Contract.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Contract.Type type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Contract)
    }

    // @@protoc_insertion_point(class_scope:protocol.Contract)
    private static final eu.epitech.jcoinche.protocol.Coinche.Contract DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Contract();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Contract getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Contract>
        PARSER = new com.google.protobuf.AbstractParser<Contract>() {
      public Contract parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Contract(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Contract> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Contract> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Contract getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.protocol.Event.Type type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.protocol.Event.Type type = 1;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Event.Type getType();

    /**
     * <code>.protocol.Card card = 2;</code>
     */
    boolean hasCard();
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Card getCard();
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder();

    /**
     * <code>.protocol.Contract contract = 3;</code>
     */
    boolean hasContract();
    /**
     * <code>.protocol.Contract contract = 3;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Contract getContract();
    /**
     * <code>.protocol.Contract contract = 3;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder getContractOrBuilder();

    /**
     * <code>.protocol.Announce announce = 4;</code>
     */
    boolean hasAnnounce();
    /**
     * <code>.protocol.Announce announce = 4;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.Announce getAnnounce();
    /**
     * <code>.protocol.Announce announce = 4;</code>
     */
    eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder getAnnounceOrBuilder();

    /**
     * <code>repeated string argument = 5;</code>
     */
    java.util.List<java.lang.String>
        getArgumentList();
    /**
     * <code>repeated string argument = 5;</code>
     */
    int getArgumentCount();
    /**
     * <code>repeated string argument = 5;</code>
     */
    java.lang.String getArgument(int index);
    /**
     * <code>repeated string argument = 5;</code>
     */
    com.google.protobuf.ByteString
        getArgumentBytes(int index);
  }
  /**
   * Protobuf type {@code protocol.Event}
   */
  public  static final class Event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Event)
      EventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Event.newBuilder() to construct.
    private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Event() {
      type_ = 0;
      argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              eu.epitech.jcoinche.protocol.Coinche.Card.Builder subBuilder = null;
              if (card_ != null) {
                subBuilder = card_.toBuilder();
              }
              card_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Card.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(card_);
                card_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              eu.epitech.jcoinche.protocol.Coinche.Contract.Builder subBuilder = null;
              if (contract_ != null) {
                subBuilder = contract_.toBuilder();
              }
              contract_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Contract.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(contract_);
                contract_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              eu.epitech.jcoinche.protocol.Coinche.Announce.Builder subBuilder = null;
              if (announce_ != null) {
                subBuilder = announce_.toBuilder();
              }
              announce_ = input.readMessage(eu.epitech.jcoinche.protocol.Coinche.Announce.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(announce_);
                announce_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                argument_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              argument_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          argument_ = argument_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Event_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Event.class, eu.epitech.jcoinche.protocol.Coinche.Event.Builder.class);
    }

    /**
     * Protobuf enum {@code protocol.Event.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>NAME = 1;</code>
       */
      NAME(1),
      /**
       * <code>HAND = 2;</code>
       */
      HAND(2),
      /**
       * <code>QUIT = 3;</code>
       */
      QUIT(3),
      /**
       * <code>CONTRACT = 4;</code>
       */
      CONTRACT(4),
      /**
       * <code>PASS = 5;</code>
       */
      PASS(5),
      /**
       * <code>COINCHE = 6;</code>
       */
      COINCHE(6),
      /**
       * <code>SURCOINCHE = 7;</code>
       */
      SURCOINCHE(7),
      /**
       * <code>PLAY = 8;</code>
       */
      PLAY(8),
      /**
       * <code>LAST = 9;</code>
       */
      LAST(9),
      /**
       * <code>ANNOUNCE = 10;</code>
       */
      ANNOUNCE(10),
      /**
       * <code>BELOTE = 11;</code>
       */
      BELOTE(11),
      /**
       * <code>REBELOTE = 12;</code>
       */
      REBELOTE(12),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>NAME = 1;</code>
       */
      public static final int NAME_VALUE = 1;
      /**
       * <code>HAND = 2;</code>
       */
      public static final int HAND_VALUE = 2;
      /**
       * <code>QUIT = 3;</code>
       */
      public static final int QUIT_VALUE = 3;
      /**
       * <code>CONTRACT = 4;</code>
       */
      public static final int CONTRACT_VALUE = 4;
      /**
       * <code>PASS = 5;</code>
       */
      public static final int PASS_VALUE = 5;
      /**
       * <code>COINCHE = 6;</code>
       */
      public static final int COINCHE_VALUE = 6;
      /**
       * <code>SURCOINCHE = 7;</code>
       */
      public static final int SURCOINCHE_VALUE = 7;
      /**
       * <code>PLAY = 8;</code>
       */
      public static final int PLAY_VALUE = 8;
      /**
       * <code>LAST = 9;</code>
       */
      public static final int LAST_VALUE = 9;
      /**
       * <code>ANNOUNCE = 10;</code>
       */
      public static final int ANNOUNCE_VALUE = 10;
      /**
       * <code>BELOTE = 11;</code>
       */
      public static final int BELOTE_VALUE = 11;
      /**
       * <code>REBELOTE = 12;</code>
       */
      public static final int REBELOTE_VALUE = 12;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return NAME;
          case 2: return HAND;
          case 3: return QUIT;
          case 4: return CONTRACT;
          case 5: return PASS;
          case 6: return COINCHE;
          case 7: return SURCOINCHE;
          case 8: return PLAY;
          case 9: return LAST;
          case 10: return ANNOUNCE;
          case 11: return BELOTE;
          case 12: return REBELOTE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.Event.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Event.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.protocol.Event.Type type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protocol.Event.Type type = 1;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Event.Type getType() {
      eu.epitech.jcoinche.protocol.Coinche.Event.Type result = eu.epitech.jcoinche.protocol.Coinche.Event.Type.valueOf(type_);
      return result == null ? eu.epitech.jcoinche.protocol.Coinche.Event.Type.UNRECOGNIZED : result;
    }

    public static final int CARD_FIELD_NUMBER = 2;
    private eu.epitech.jcoinche.protocol.Coinche.Card card_;
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    public boolean hasCard() {
      return card_ != null;
    }
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Card getCard() {
      return card_ == null ? eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance() : card_;
    }
    /**
     * <code>.protocol.Card card = 2;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder() {
      return getCard();
    }

    public static final int CONTRACT_FIELD_NUMBER = 3;
    private eu.epitech.jcoinche.protocol.Coinche.Contract contract_;
    /**
     * <code>.protocol.Contract contract = 3;</code>
     */
    public boolean hasContract() {
      return contract_ != null;
    }
    /**
     * <code>.protocol.Contract contract = 3;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Contract getContract() {
      return contract_ == null ? eu.epitech.jcoinche.protocol.Coinche.Contract.getDefaultInstance() : contract_;
    }
    /**
     * <code>.protocol.Contract contract = 3;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder getContractOrBuilder() {
      return getContract();
    }

    public static final int ANNOUNCE_FIELD_NUMBER = 4;
    private eu.epitech.jcoinche.protocol.Coinche.Announce announce_;
    /**
     * <code>.protocol.Announce announce = 4;</code>
     */
    public boolean hasAnnounce() {
      return announce_ != null;
    }
    /**
     * <code>.protocol.Announce announce = 4;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.Announce getAnnounce() {
      return announce_ == null ? eu.epitech.jcoinche.protocol.Coinche.Announce.getDefaultInstance() : announce_;
    }
    /**
     * <code>.protocol.Announce announce = 4;</code>
     */
    public eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder getAnnounceOrBuilder() {
      return getAnnounce();
    }

    public static final int ARGUMENT_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList argument_;
    /**
     * <code>repeated string argument = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getArgumentList() {
      return argument_;
    }
    /**
     * <code>repeated string argument = 5;</code>
     */
    public int getArgumentCount() {
      return argument_.size();
    }
    /**
     * <code>repeated string argument = 5;</code>
     */
    public java.lang.String getArgument(int index) {
      return argument_.get(index);
    }
    /**
     * <code>repeated string argument = 5;</code>
     */
    public com.google.protobuf.ByteString
        getArgumentBytes(int index) {
      return argument_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Event.Type.UNDEFINED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (card_ != null) {
        output.writeMessage(2, getCard());
      }
      if (contract_ != null) {
        output.writeMessage(3, getContract());
      }
      if (announce_ != null) {
        output.writeMessage(4, getAnnounce());
      }
      for (int i = 0; i < argument_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, argument_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != eu.epitech.jcoinche.protocol.Coinche.Event.Type.UNDEFINED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (card_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCard());
      }
      if (contract_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getContract());
      }
      if (announce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAnnounce());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < argument_.size(); i++) {
          dataSize += computeStringSizeNoTag(argument_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getArgumentList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Event)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Event other = (eu.epitech.jcoinche.protocol.Coinche.Event) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasCard() == other.hasCard());
      if (hasCard()) {
        result = result && getCard()
            .equals(other.getCard());
      }
      result = result && (hasContract() == other.hasContract());
      if (hasContract()) {
        result = result && getContract()
            .equals(other.getContract());
      }
      result = result && (hasAnnounce() == other.hasAnnounce());
      if (hasAnnounce()) {
        result = result && getAnnounce()
            .equals(other.getAnnounce());
      }
      result = result && getArgumentList()
          .equals(other.getArgumentList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasCard()) {
        hash = (37 * hash) + CARD_FIELD_NUMBER;
        hash = (53 * hash) + getCard().hashCode();
      }
      if (hasContract()) {
        hash = (37 * hash) + CONTRACT_FIELD_NUMBER;
        hash = (53 * hash) + getContract().hashCode();
      }
      if (hasAnnounce()) {
        hash = (37 * hash) + ANNOUNCE_FIELD_NUMBER;
        hash = (53 * hash) + getAnnounce().hashCode();
      }
      if (getArgumentCount() > 0) {
        hash = (37 * hash) + ARGUMENT_FIELD_NUMBER;
        hash = (53 * hash) + getArgumentList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Event)
        eu.epitech.jcoinche.protocol.Coinche.EventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Event_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Event.class, eu.epitech.jcoinche.protocol.Coinche.Event.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (cardBuilder_ == null) {
          card_ = null;
        } else {
          card_ = null;
          cardBuilder_ = null;
        }
        if (contractBuilder_ == null) {
          contract_ = null;
        } else {
          contract_ = null;
          contractBuilder_ = null;
        }
        if (announceBuilder_ == null) {
          announce_ = null;
        } else {
          announce_ = null;
          announceBuilder_ = null;
        }
        argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Event_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Event getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Event.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Event build() {
        eu.epitech.jcoinche.protocol.Coinche.Event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Event buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Event result = new eu.epitech.jcoinche.protocol.Coinche.Event(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.type_ = type_;
        if (cardBuilder_ == null) {
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        if (contractBuilder_ == null) {
          result.contract_ = contract_;
        } else {
          result.contract_ = contractBuilder_.build();
        }
        if (announceBuilder_ == null) {
          result.announce_ = announce_;
        } else {
          result.announce_ = announceBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          argument_ = argument_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.argument_ = argument_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Event) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Event other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Event.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasCard()) {
          mergeCard(other.getCard());
        }
        if (other.hasContract()) {
          mergeContract(other.getContract());
        }
        if (other.hasAnnounce()) {
          mergeAnnounce(other.getAnnounce());
        }
        if (!other.argument_.isEmpty()) {
          if (argument_.isEmpty()) {
            argument_ = other.argument_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureArgumentIsMutable();
            argument_.addAll(other.argument_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.protocol.Event.Type type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.protocol.Event.Type type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Event.Type type = 1;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Event.Type getType() {
        eu.epitech.jcoinche.protocol.Coinche.Event.Type result = eu.epitech.jcoinche.protocol.Coinche.Event.Type.valueOf(type_);
        return result == null ? eu.epitech.jcoinche.protocol.Coinche.Event.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.protocol.Event.Type type = 1;</code>
       */
      public Builder setType(eu.epitech.jcoinche.protocol.Coinche.Event.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.protocol.Event.Type type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Card card_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> cardBuilder_;
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public boolean hasCard() {
        return cardBuilder_ != null || card_ != null;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card getCard() {
        if (cardBuilder_ == null) {
          return card_ == null ? eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance() : card_;
        } else {
          return cardBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder setCard(eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          card_ = value;
          onChanged();
        } else {
          cardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder setCard(
          eu.epitech.jcoinche.protocol.Coinche.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          card_ = builderForValue.build();
          onChanged();
        } else {
          cardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder mergeCard(eu.epitech.jcoinche.protocol.Coinche.Card value) {
        if (cardBuilder_ == null) {
          if (card_ != null) {
            card_ =
              eu.epitech.jcoinche.protocol.Coinche.Card.newBuilder(card_).mergeFrom(value).buildPartial();
          } else {
            card_ = value;
          }
          onChanged();
        } else {
          cardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = null;
          onChanged();
        } else {
          card_ = null;
          cardBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Card.Builder getCardBuilder() {
        
        onChanged();
        return getCardFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder getCardOrBuilder() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilder();
        } else {
          return card_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Card.getDefaultInstance() : card_;
        }
      }
      /**
       * <code>.protocol.Card card = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Card, eu.epitech.jcoinche.protocol.Coinche.Card.Builder, eu.epitech.jcoinche.protocol.Coinche.CardOrBuilder>(
                  getCard(),
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Contract contract_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Contract, eu.epitech.jcoinche.protocol.Coinche.Contract.Builder, eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder> contractBuilder_;
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public boolean hasContract() {
        return contractBuilder_ != null || contract_ != null;
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Contract getContract() {
        if (contractBuilder_ == null) {
          return contract_ == null ? eu.epitech.jcoinche.protocol.Coinche.Contract.getDefaultInstance() : contract_;
        } else {
          return contractBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public Builder setContract(eu.epitech.jcoinche.protocol.Coinche.Contract value) {
        if (contractBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          contract_ = value;
          onChanged();
        } else {
          contractBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public Builder setContract(
          eu.epitech.jcoinche.protocol.Coinche.Contract.Builder builderForValue) {
        if (contractBuilder_ == null) {
          contract_ = builderForValue.build();
          onChanged();
        } else {
          contractBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public Builder mergeContract(eu.epitech.jcoinche.protocol.Coinche.Contract value) {
        if (contractBuilder_ == null) {
          if (contract_ != null) {
            contract_ =
              eu.epitech.jcoinche.protocol.Coinche.Contract.newBuilder(contract_).mergeFrom(value).buildPartial();
          } else {
            contract_ = value;
          }
          onChanged();
        } else {
          contractBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public Builder clearContract() {
        if (contractBuilder_ == null) {
          contract_ = null;
          onChanged();
        } else {
          contract_ = null;
          contractBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Contract.Builder getContractBuilder() {
        
        onChanged();
        return getContractFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder getContractOrBuilder() {
        if (contractBuilder_ != null) {
          return contractBuilder_.getMessageOrBuilder();
        } else {
          return contract_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Contract.getDefaultInstance() : contract_;
        }
      }
      /**
       * <code>.protocol.Contract contract = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Contract, eu.epitech.jcoinche.protocol.Coinche.Contract.Builder, eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder> 
          getContractFieldBuilder() {
        if (contractBuilder_ == null) {
          contractBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Contract, eu.epitech.jcoinche.protocol.Coinche.Contract.Builder, eu.epitech.jcoinche.protocol.Coinche.ContractOrBuilder>(
                  getContract(),
                  getParentForChildren(),
                  isClean());
          contract_ = null;
        }
        return contractBuilder_;
      }

      private eu.epitech.jcoinche.protocol.Coinche.Announce announce_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Announce, eu.epitech.jcoinche.protocol.Coinche.Announce.Builder, eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder> announceBuilder_;
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public boolean hasAnnounce() {
        return announceBuilder_ != null || announce_ != null;
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Announce getAnnounce() {
        if (announceBuilder_ == null) {
          return announce_ == null ? eu.epitech.jcoinche.protocol.Coinche.Announce.getDefaultInstance() : announce_;
        } else {
          return announceBuilder_.getMessage();
        }
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public Builder setAnnounce(eu.epitech.jcoinche.protocol.Coinche.Announce value) {
        if (announceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          announce_ = value;
          onChanged();
        } else {
          announceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public Builder setAnnounce(
          eu.epitech.jcoinche.protocol.Coinche.Announce.Builder builderForValue) {
        if (announceBuilder_ == null) {
          announce_ = builderForValue.build();
          onChanged();
        } else {
          announceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public Builder mergeAnnounce(eu.epitech.jcoinche.protocol.Coinche.Announce value) {
        if (announceBuilder_ == null) {
          if (announce_ != null) {
            announce_ =
              eu.epitech.jcoinche.protocol.Coinche.Announce.newBuilder(announce_).mergeFrom(value).buildPartial();
          } else {
            announce_ = value;
          }
          onChanged();
        } else {
          announceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public Builder clearAnnounce() {
        if (announceBuilder_ == null) {
          announce_ = null;
          onChanged();
        } else {
          announce_ = null;
          announceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.Announce.Builder getAnnounceBuilder() {
        
        onChanged();
        return getAnnounceFieldBuilder().getBuilder();
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      public eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder getAnnounceOrBuilder() {
        if (announceBuilder_ != null) {
          return announceBuilder_.getMessageOrBuilder();
        } else {
          return announce_ == null ?
              eu.epitech.jcoinche.protocol.Coinche.Announce.getDefaultInstance() : announce_;
        }
      }
      /**
       * <code>.protocol.Announce announce = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.protocol.Coinche.Announce, eu.epitech.jcoinche.protocol.Coinche.Announce.Builder, eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder> 
          getAnnounceFieldBuilder() {
        if (announceBuilder_ == null) {
          announceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.protocol.Coinche.Announce, eu.epitech.jcoinche.protocol.Coinche.Announce.Builder, eu.epitech.jcoinche.protocol.Coinche.AnnounceOrBuilder>(
                  getAnnounce(),
                  getParentForChildren(),
                  isClean());
          announce_ = null;
        }
        return announceBuilder_;
      }

      private com.google.protobuf.LazyStringList argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureArgumentIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          argument_ = new com.google.protobuf.LazyStringArrayList(argument_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getArgumentList() {
        return argument_.getUnmodifiableView();
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public int getArgumentCount() {
        return argument_.size();
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public java.lang.String getArgument(int index) {
        return argument_.get(index);
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public com.google.protobuf.ByteString
          getArgumentBytes(int index) {
        return argument_.getByteString(index);
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public Builder setArgument(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgumentIsMutable();
        argument_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public Builder addArgument(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgumentIsMutable();
        argument_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public Builder addAllArgument(
          java.lang.Iterable<java.lang.String> values) {
        ensureArgumentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, argument_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public Builder clearArgument() {
        argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 5;</code>
       */
      public Builder addArgumentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureArgumentIsMutable();
        argument_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Event)
    }

    // @@protoc_insertion_point(class_scope:protocol.Event)
    private static final eu.epitech.jcoinche.protocol.Coinche.Event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Event();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Event>
        PARSER = new com.google.protobuf.AbstractParser<Event>() {
      public Event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Event> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PromptOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Prompt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string to_display = 1;</code>
     */
    java.util.List<java.lang.String>
        getToDisplayList();
    /**
     * <code>repeated string to_display = 1;</code>
     */
    int getToDisplayCount();
    /**
     * <code>repeated string to_display = 1;</code>
     */
    java.lang.String getToDisplay(int index);
    /**
     * <code>repeated string to_display = 1;</code>
     */
    com.google.protobuf.ByteString
        getToDisplayBytes(int index);
  }
  /**
   * Protobuf type {@code protocol.Prompt}
   */
  public  static final class Prompt extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Prompt)
      PromptOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Prompt.newBuilder() to construct.
    private Prompt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Prompt() {
      toDisplay_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Prompt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                toDisplay_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              toDisplay_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          toDisplay_ = toDisplay_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Prompt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Prompt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Prompt.class, eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder.class);
    }

    public static final int TO_DISPLAY_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList toDisplay_;
    /**
     * <code>repeated string to_display = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getToDisplayList() {
      return toDisplay_;
    }
    /**
     * <code>repeated string to_display = 1;</code>
     */
    public int getToDisplayCount() {
      return toDisplay_.size();
    }
    /**
     * <code>repeated string to_display = 1;</code>
     */
    public java.lang.String getToDisplay(int index) {
      return toDisplay_.get(index);
    }
    /**
     * <code>repeated string to_display = 1;</code>
     */
    public com.google.protobuf.ByteString
        getToDisplayBytes(int index) {
      return toDisplay_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < toDisplay_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, toDisplay_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < toDisplay_.size(); i++) {
          dataSize += computeStringSizeNoTag(toDisplay_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getToDisplayList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Prompt)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Prompt other = (eu.epitech.jcoinche.protocol.Coinche.Prompt) obj;

      boolean result = true;
      result = result && getToDisplayList()
          .equals(other.getToDisplayList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getToDisplayCount() > 0) {
        hash = (37 * hash) + TO_DISPLAY_FIELD_NUMBER;
        hash = (53 * hash) + getToDisplayList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Prompt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Prompt prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Prompt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Prompt)
        eu.epitech.jcoinche.protocol.Coinche.PromptOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Prompt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Prompt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Prompt.class, eu.epitech.jcoinche.protocol.Coinche.Prompt.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Prompt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        toDisplay_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Prompt_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Prompt getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Prompt.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Prompt build() {
        eu.epitech.jcoinche.protocol.Coinche.Prompt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Prompt buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Prompt result = new eu.epitech.jcoinche.protocol.Coinche.Prompt(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          toDisplay_ = toDisplay_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.toDisplay_ = toDisplay_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Prompt) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Prompt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Prompt other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Prompt.getDefaultInstance()) return this;
        if (!other.toDisplay_.isEmpty()) {
          if (toDisplay_.isEmpty()) {
            toDisplay_ = other.toDisplay_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureToDisplayIsMutable();
            toDisplay_.addAll(other.toDisplay_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Prompt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Prompt) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList toDisplay_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureToDisplayIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          toDisplay_ = new com.google.protobuf.LazyStringArrayList(toDisplay_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getToDisplayList() {
        return toDisplay_.getUnmodifiableView();
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public int getToDisplayCount() {
        return toDisplay_.size();
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public java.lang.String getToDisplay(int index) {
        return toDisplay_.get(index);
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public com.google.protobuf.ByteString
          getToDisplayBytes(int index) {
        return toDisplay_.getByteString(index);
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public Builder setToDisplay(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureToDisplayIsMutable();
        toDisplay_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public Builder addToDisplay(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureToDisplayIsMutable();
        toDisplay_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public Builder addAllToDisplay(
          java.lang.Iterable<java.lang.String> values) {
        ensureToDisplayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, toDisplay_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public Builder clearToDisplay() {
        toDisplay_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string to_display = 1;</code>
       */
      public Builder addToDisplayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureToDisplayIsMutable();
        toDisplay_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Prompt)
    }

    // @@protoc_insertion_point(class_scope:protocol.Prompt)
    private static final eu.epitech.jcoinche.protocol.Coinche.Prompt DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Prompt();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Prompt getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Prompt>
        PARSER = new com.google.protobuf.AbstractParser<Prompt>() {
      public Prompt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Prompt(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Prompt> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Prompt> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Prompt getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Reply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 number = 1;</code>
     */
    int getNumber();

    /**
     * <code>string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code protocol.Reply}
   */
  public  static final class Reply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protocol.Reply)
      ReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Reply.newBuilder() to construct.
    private Reply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Reply() {
      number_ = 0;
      message_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Reply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              number_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Reply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Reply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.protocol.Coinche.Reply.class, eu.epitech.jcoinche.protocol.Coinche.Reply.Builder.class);
    }

    public static final int NUMBER_FIELD_NUMBER = 1;
    private int number_;
    /**
     * <code>uint32 number = 1;</code>
     */
    public int getNumber() {
      return number_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 2;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (number_ != 0) {
        output.writeUInt32(1, number_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (number_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, number_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.protocol.Coinche.Reply)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.protocol.Coinche.Reply other = (eu.epitech.jcoinche.protocol.Coinche.Reply) obj;

      boolean result = true;
      result = result && (getNumber()
          == other.getNumber());
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getNumber();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.protocol.Coinche.Reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.protocol.Coinche.Reply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Reply)
        eu.epitech.jcoinche.protocol.Coinche.ReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Reply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Reply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.protocol.Coinche.Reply.class, eu.epitech.jcoinche.protocol.Coinche.Reply.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.protocol.Coinche.Reply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        number_ = 0;

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.protocol.Coinche.internal_static_protocol_Reply_descriptor;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Reply getDefaultInstanceForType() {
        return eu.epitech.jcoinche.protocol.Coinche.Reply.getDefaultInstance();
      }

      public eu.epitech.jcoinche.protocol.Coinche.Reply build() {
        eu.epitech.jcoinche.protocol.Coinche.Reply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.protocol.Coinche.Reply buildPartial() {
        eu.epitech.jcoinche.protocol.Coinche.Reply result = new eu.epitech.jcoinche.protocol.Coinche.Reply(this);
        result.number_ = number_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.protocol.Coinche.Reply) {
          return mergeFrom((eu.epitech.jcoinche.protocol.Coinche.Reply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.protocol.Coinche.Reply other) {
        if (other == eu.epitech.jcoinche.protocol.Coinche.Reply.getDefaultInstance()) return this;
        if (other.getNumber() != 0) {
          setNumber(other.getNumber());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.protocol.Coinche.Reply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.protocol.Coinche.Reply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int number_ ;
      /**
       * <code>uint32 number = 1;</code>
       */
      public int getNumber() {
        return number_;
      }
      /**
       * <code>uint32 number = 1;</code>
       */
      public Builder setNumber(int value) {
        
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 number = 1;</code>
       */
      public Builder clearNumber() {
        
        number_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:protocol.Reply)
    }

    // @@protoc_insertion_point(class_scope:protocol.Reply)
    private static final eu.epitech.jcoinche.protocol.Coinche.Reply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.protocol.Coinche.Reply();
    }

    public static eu.epitech.jcoinche.protocol.Coinche.Reply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Reply>
        PARSER = new com.google.protobuf.AbstractParser<Reply>() {
      public Reply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Reply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Reply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Reply> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.protocol.Coinche.Reply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Message_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Card_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Card_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Announce_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Announce_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Hand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Hand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Contract_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Contract_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Prompt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Prompt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Reply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protocol_Reply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n>src/main/java/eu/epitech/jcoinche/prot" +
      "ocol/communication.proto\022\010protocol\"\362\001\n\007M" +
      "essage\022$\n\004type\030\001 \001(\0162\026.protocol.Message." +
      "Type\022\034\n\004hand\030\002 \001(\0132\016.protocol.Hand\022\036\n\005ev" +
      "ent\030\003 \001(\0132\017.protocol.Event\022 \n\006prompt\030\004 \001" +
      "(\0132\020.protocol.Prompt\022\036\n\005reply\030\005 \001(\0132\017.pr" +
      "otocol.Reply\"A\n\004Type\022\r\n\tUNDEFINED\020\000\022\010\n\004H" +
      "AND\020\001\022\t\n\005EVENT\020\002\022\n\n\006PROMPT\020\003\022\t\n\005REPLY\020\004\"" +
      "\201\002\n\004Card\022!\n\004type\030\001 \001(\0162\023.protocol.Card.T" +
      "ype\022#\n\005value\030\002 \001(\0162\024.protocol.Card.Value",
      "\"G\n\004Type\022\016\n\nUNDEFINEDT\020\000\022\014\n\010DIAMONDS\020\001\022\n" +
      "\n\006HEARTS\020\002\022\t\n\005CLUBS\020\003\022\n\n\006SPADES\020\004\"h\n\005Val" +
      "ue\022\016\n\nUNDEFINEDV\020\000\022\007\n\003ACE\020\001\022\010\n\004KING\020\002\022\t\n" +
      "\005QUEEN\020\003\022\010\n\004JACK\020\004\022\007\n\003TEN\020\005\022\010\n\004NINE\020\006\022\t\n" +
      "\005EIGHT\020\007\022\t\n\005SEVEN\020\010\"\226\001\n\010Announce\022%\n\004type" +
      "\030\001 \001(\0162\027.protocol.Announce.Type\022\034\n\004card\030" +
      "\002 \001(\0132\016.protocol.Card\"E\n\004Type\022\r\n\tUNDEFIN" +
      "ED\020\000\022\t\n\005CARRE\020\001\022\010\n\004CENT\020\002\022\r\n\tCINQUANTE\020\003" +
      "\022\n\n\006TIERCE\020\004\"$\n\004Hand\022\034\n\004card\030\001 \003(\0132\016.pro" +
      "tocol.Card\"\230\001\n\010Contract\022\r\n\005score\030\001 \001(\r\022%",
      "\n\004type\030\002 \001(\0162\027.protocol.Contract.Type\"V\n" +
      "\004Type\022\r\n\tUNDEFINED\020\000\022\014\n\010DIAMONDS\020\001\022\n\n\006HE" +
      "ARTS\020\002\022\t\n\005CLUBS\020\003\022\n\n\006SPADES\020\004\022\006\n\002AA\020\005\022\006\n" +
      "\002NA\020\006\"\316\002\n\005Event\022\"\n\004type\030\001 \001(\0162\024.protocol" +
      ".Event.Type\022\034\n\004card\030\002 \001(\0132\016.protocol.Car" +
      "d\022$\n\010contract\030\003 \001(\0132\022.protocol.Contract\022" +
      "$\n\010announce\030\004 \001(\0132\022.protocol.Announce\022\020\n" +
      "\010argument\030\005 \003(\t\"\244\001\n\004Type\022\r\n\tUNDEFINED\020\000\022" +
      "\010\n\004NAME\020\001\022\010\n\004HAND\020\002\022\010\n\004QUIT\020\003\022\014\n\010CONTRAC" +
      "T\020\004\022\010\n\004PASS\020\005\022\013\n\007COINCHE\020\006\022\016\n\nSURCOINCHE",
      "\020\007\022\010\n\004PLAY\020\010\022\010\n\004LAST\020\t\022\014\n\010ANNOUNCE\020\n\022\n\n\006" +
      "BELOTE\020\013\022\014\n\010REBELOTE\020\014\"\034\n\006Prompt\022\022\n\nto_d" +
      "isplay\030\001 \003(\t\"(\n\005Reply\022\016\n\006number\030\001 \001(\r\022\017\n" +
      "\007message\030\002 \001(\tB\'\n\034eu.epitech.jcoinche.pr" +
      "otocolB\007Coincheb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protocol_Message_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Message_descriptor,
        new java.lang.String[] { "Type", "Hand", "Event", "Prompt", "Reply", });
    internal_static_protocol_Card_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protocol_Card_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Card_descriptor,
        new java.lang.String[] { "Type", "Value", });
    internal_static_protocol_Announce_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protocol_Announce_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Announce_descriptor,
        new java.lang.String[] { "Type", "Card", });
    internal_static_protocol_Hand_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protocol_Hand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Hand_descriptor,
        new java.lang.String[] { "Card", });
    internal_static_protocol_Contract_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protocol_Contract_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Contract_descriptor,
        new java.lang.String[] { "Score", "Type", });
    internal_static_protocol_Event_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protocol_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Event_descriptor,
        new java.lang.String[] { "Type", "Card", "Contract", "Announce", "Argument", });
    internal_static_protocol_Prompt_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protocol_Prompt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Prompt_descriptor,
        new java.lang.String[] { "ToDisplay", });
    internal_static_protocol_Reply_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_protocol_Reply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protocol_Reply_descriptor,
        new java.lang.String[] { "Number", "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
